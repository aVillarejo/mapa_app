{"version":3,"sources":["assets/background1.jpg","views/pages/Register.js","components/Navbar.js","views/pages/Login.js","views/pages/Landing.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Register","React","Component","state","usuario","nombre","apellido","telefono","correo","psw","psw2","handleChange","event","_this","setState","Object","objectSpread","defineProperty","target","name","value","_this2","this","react_default","a","createElement","id","className","style","backgroundImage","imgUrl","Container","Row","Col","sm","size","Card","body","CardHeader","Form","InputGroup","InputGroupAddon","addonType","Input","placeholder","type","onChange","e","pattern","inputMode","Button","block","color","Landing","react_router_dom","to","CardTitle","CardText","App","react_router","exact","path","component","Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af98ec03.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background1.dbd3a31d.jpg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport imgUrl from \"../../assets/background1.jpg\";\nimport {\n  Button,\n  Container,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  Card,\n  Row,\n  Col,\n  Form,\n  CardHeader\n} from \"reactstrap\";\nimport Navbar from \"../../components/Navbar\";\n\nexport default class Register extends React.Component {\n  state = {\n    usuario: {\n      nombre: \"\",\n      apellido: \"\",\n      telefono: \"\",\n      correo: \"\",\n      psw: \"\",\n      psw2: \"\"\n    }\n  };\n  handleChange = event => {\n    this.setState({\n      usuario: {\n        ...this.state.usuario,\n        [event.target.name]: event.target.value\n      }\n    });\n  };\n  render() {\n    return (\n      <header id=\"home\">\n        <div\n          className=\"bg-img\"\n          style={{ backgroundImage: \"url(\" + imgUrl + \")\" }}\n        >\n          <div className=\"overlay\" />\n        </div>\n        <div className=\"home-wrapper\">\n          <Container className=\"mt-0\">\n            <Row>\n              <Col sm={{ size: 7 }}>\n                <h1 className=\"white-text\">Mapa del Conocimiento</h1>\n                <p className=\"white-text\">\n                  {\" \"}\n                  Registrate para compartir tus investigaciones y acceder al\n                  conocimiento con todos\n                </p>\n              </Col>\n              <Col sm={{ size: 5 }}>\n                <Card body>\n                  <CardHeader>Crear Cuenta</CardHeader>\n\n                  <Form>\n                    <InputGroup className=\"my-2\">\n                      <InputGroupAddon addonType=\"prepend\">N</InputGroupAddon>\n                      <Input placeholder=\"Nombre\" type=\"text\" />\n                    </InputGroup>\n                    <InputGroup className=\"my-3\">\n                      <InputGroupAddon addonType=\"prepend\">A</InputGroupAddon>\n                      <Input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Apellido\"\n                        name=\"apellido\"\n                        onChange={e => {\n                          this.handleChange(e);\n                        }}\n                      />\n                    </InputGroup>\n                    <InputGroup className=\"my-3\">\n                      <InputGroupAddon addonType=\"prepend\">T</InputGroupAddon>\n                      <Input\n                        type=\"number\"\n                        pattern=\"[0-9]*\"\n                        inputMode=\"numeric\"\n                        className=\"form-control\"\n                        placeholder=\"Telefono\"\n                        name=\"telefono\"\n                        onChange={e => {\n                          this.handleChange(e);\n                        }}\n                      />\n                    </InputGroup>\n                    <InputGroup className=\"my-3\">\n                      <InputGroupAddon addonType=\"prepend\">@</InputGroupAddon>\n                      <Input\n                        type=\"email\"\n                        className=\"form-control\"\n                        name=\"correo\"\n                        onChange={e => {\n                          this.handleChange(e);\n                        }}\n                        placeholder=\"correo\"\n                      />\n                    </InputGroup>\n                    <InputGroup className=\"my-3\">\n                      <InputGroupAddon addonType=\"prepend\">*</InputGroupAddon>\n                      <Input\n                        name=\"psw\"\n                        className=\"form-control\"\n                        onChange={e => {\n                          this.handleChange(e);\n                        }}\n                        placeholder=\"Password\"\n                      />\n                    </InputGroup>\n                    <InputGroup className=\"my-3\">\n                      <InputGroupAddon addonType=\"prepend\">*</InputGroupAddon>\n                      <Input\n                        name=\"psw\"\n                        className=\"form-control\"\n                        onChange={e => {\n                          this.handleChange(e);\n                        }}\n                        placeholder=\"Password\"\n                      />\n                    </InputGroup>\n                    <Button block color=\"success\">\n                      {\" \"}\n                      Registrarme!\n                    </Button>\n                  </Form>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </header>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\";\n\nexport default class NavbarComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: true\n    };\n  }\n\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Navbar light>\n          <NavbarBrand href=\"/\" className=\"mr-auto\">\n            Mapa del Conocimiento\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n          <Collapse isOpen={!this.state.collapsed} navbar>\n            <Nav navbar>\n              <NavItem>\n                <NavLink href=\"/components/\">Components</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"https://github.com/reactstrap/reactstrap\">\n                  GitHub\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport imgUrl from \"../../assets/background1.jpg\";\nimport {\n  Button,\n  Container,\n  Alert,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  Card,\n  Row,\n  Col,\n  CardText,\n  CardTitle,\n  Form,\n  CardHeader\n} from \"reactstrap\";\nimport Navbar from \"../../components/Navbar\";\n\nexport default class Landing extends React.Component {\n  render() {\n    return (\n      <header id=\"home\">\n        <div\n          className=\"bg-img\"\n          style={{ backgroundImage: \"url(\" + imgUrl + \")\" }}\n        >\n          <div className=\"overlay\" />\n        </div>\n        <div className=\"home-wrapper\">\n          <Container>\n            <Row>\n              <Col sm={{ size: 7 }}>\n                <h1 className=\"white-text\">Mapa del Conocimiento</h1>\n                <p className=\"white-text\">\n                  {\" \"}\n                  La manera más fácil de compartir tus investigaciones y\n                  conocimiento con todos\n                </p>\n\n                <Link className=\"main-btn\" to=\"/registro\">\n                  Registro\n                </Link>\n              </Col>\n              <Col sm={{ size: 5 }}>\n                <Card body>\n                  <CardHeader>Header</CardHeader>\n                  <CardTitle>Special Title Treatment</CardTitle>\n                  <CardText>\n                    With supporting text below as a natural lead-in to\n                    additional content.\n                  </CardText>\n                  <Form>\n                    <InputGroup className=\"my-2\">\n                      <InputGroupAddon addonType=\"prepend\">N</InputGroupAddon>\n                      <Input placeholder=\"Nombre\" />\n                    </InputGroup>\n                    <InputGroup className=\"my-3\">\n                      <InputGroupAddon addonType=\"prepend\">A</InputGroupAddon>\n                      <Input placeholder=\"Apellidos\" />\n                    </InputGroup>\n                    <InputGroup className=\"my-3\">\n                      <InputGroupAddon addonType=\"prepend\">T</InputGroupAddon>\n                      <Input placeholder=\"Telefono\" />\n                    </InputGroup>\n                    <InputGroup className=\"my-3\">\n                      <InputGroupAddon addonType=\"prepend\">@</InputGroupAddon>\n                      <Input placeholder=\"correo\" />\n                    </InputGroup>\n                    <InputGroup className=\"my-3\">\n                      <InputGroupAddon addonType=\"prepend\">*</InputGroupAddon>\n                      <Input placeholder=\"Password\" />\n                    </InputGroup>\n                    <InputGroup className=\"my-3\">\n                      <InputGroupAddon addonType=\"prepend\">*</InputGroupAddon>\n                      <Input placeholder=\"Password\" />\n                    </InputGroup>\n                    <Button block color=\"success\">\n                      {\" \"}\n                      Registrarme!\n                    </Button>\n                  </Form>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </header>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport imgUrl from \"../../assets/background1.jpg\";\n\nexport default class Landing extends React.Component {\n  render() {\n    return (\n      <header id=\"home\">\n        <div\n          className=\"bg-img\"\n          style={{ backgroundImage: \"url(\" + imgUrl + \")\" }}\n        >\n          <div className=\"overlay\" />\n        </div>\n\n        <div className=\"home-wrapper\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"home-content\">\n                  <h1 className=\"white-text\">Mapa del Conocimiento</h1>\n                  <p className=\"white-text\">\n                    {\" \"}\n                    La manera más fácil de compartir tus investigaciones y\n                    conocimiento con todos\n                  </p>\n\n                  <Link className=\"main-btn\" to=\"/registro\">\n                    Registro\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport Register from \"./views/pages/Register\";\nimport Login from \"./views/pages/Login\";\nimport Landing from \"./views/pages/Landing\";\n\n// import logo from './logo.svg';\n// import \"./App.css\";\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/login\" name=\"Login Page\" component={Login} />\n          <Route\n            exact\n            path=\"/registro\"\n            name=\"Register Page\"\n            component={Register}\n          />\n          <Route exact path=\"/\" name=\"Landing Page\" component={Landing} />\n          {/* <Redirect from=\"/\" to=\"/registro\" /> */}\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}